#BlueJ class context
comment0.target=Baseball
comment0.text=\r\n\ The\ Baseball\ program\ simulates\ a\ baseball\ game\ with\ 9\ inning\ and\ a\ maximun\ score\ of\ 4\ per\ inning.\r\n\r\n\ @author\ James\ Liu\r\n\ @version\ 1.2<P>\r\n\ <P>\r\n\ 4/6/2020\ \ -\ version\ 1.0<P>\r\n\ \ \ \ \ \ \ \ \ \ \ -\ Created\ skeleton\ code.<P>\r\n\ \ \ \ \ \ \ \ \ \ \ -\ Completed\ constructor(),\ getInning(),\ playBall(),\ playMultiInnings(),\ totalScore()\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ printMe(),\ and\ toString().<P>\r\n\ \ \ \ \ \ \ \ \ \ \ -\ Tested\ all\ methods\ for\ bugs\ and\ errors.<P>\r\n\ \ \ \ \ \ \ \ \ \ \ -\ Revised\ playMultiInnings()\ method.<P>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ <P>\r\n\ 4/10/2020\ -\ version\ 1.1\r\n\ \ \ \ \ \ \ \ \ \ \ -\ Added\ equals()\ method.<P>\r\n\ \ \ \ \ \ \ \ \ \ \ -\ Tested\ equals()\ method.<P>\r\n\ \ \ \ \ \ \ \ \ \ \ -\ Found\ a\ bug\ in\ equals()\ method\ that\ didn't\ returned\ expected\ results.<P>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ <P>\r\n\ 4/11/2020\ -\ version\ 1.2<P>\r\n\ \ \ \ \ \ \ \ \ \ \ -\ Fixed\ equals()\ method\ to\ return\ expected\ results.<P>\r\n\ \ \ \ \ \ \ \ \ \ \ -\ Tested\ equals()\ method\ for\ errors\ and\ bugs.<P>\r\n\ \ \ \ \ \ \ \ \ \ \ -\ Modified\ playBall()\ method\ to\ reflect\ more\ realistic\ scores.<P>\r\n\ \ \ \ \ \ \ \ \ \ \ -\ Reduced\ lines\ of\ unnecessary\ codes\ and\ removed\ chance\ of\ error\ by\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ revising\ playMultiInnings()\ method\ to\ use\ playBall()\ method.<P>\r\n\ \ \ \ \ \ \ \ \ \ \ -\ Modified\ toString()\ method\ to\ add\ a\ marker\ around\ the\ current\ inning.<P>\r\n\ \ \ \ \ \ \ \ \ \ \ -\ Tested\ all\ methods\ for\ bugs\ and\ errors,\ none\ found.<P>\r\n
comment1.params=
comment1.target=Baseball()
comment1.text=\r\n\ This\ initialize\ each\ private\ variable\ and\ array\ of\ the\ class.\r\n\ \r\n
comment2.params=
comment2.target=int\ getInning()
comment2.text=\r\n\ This\ returns\ the\ current\ inning\ of\ the\ game.\r\n\ @return\ this\ inning\r\n
comment3.params=
comment3.target=void\ playBall()
comment3.text=\r\n\ This\ method\ plays\ a\ single\ inning\ for\ a\ score\ between\ 0-4\ for\ that\ inning\ with\ \r\n\ 0\ runs\ at\ 52%,\ 1\ runs\ at\ 30%,\ 2\ runs\ at\ 10%,\ 3\ runs\ at\ 5%,\ and\ 4\ runs\ at\ 3%.\r\n
comment4.params=t
comment4.target=void\ playMultiInnings(int)
comment4.text=\r\n\ This\ method\ uses\ playBall()\ to\ plays\ multiple\ inning\ for\ a\ score\ between\ 0-4\ for\ that\ inning.\r\n\ @param\ t\ this\ is\ how\ many\ innings\ you\ would\ like\ to\ play.\r\n
comment5.params=
comment5.target=int\ totalScore()
comment5.text=\r\n\ This\ adds\ up\ and\ returns\ the\ total\ scores\ of\ all\ innings\ played.\r\n\ @return\ the\ total\ score.\r\n
comment6.params=
comment6.target=void\ printMe()
comment6.text=\r\n\ This\ method\ uses\ the\ method\ toString\ to\ print\ the\ scores\ for\ each\ inning.\ Maining\ used\ for\ \r\n\ debugging\ purposes.\r\n
comment7.params=
comment7.target=java.lang.String\ toString()
comment7.text=\r\n\ This\ method\ prints\ the\ current\ scores\ for\ each\ inning\ and\ returns\ it\ as\ a\ string.\r\n\ @return\ this\ returns\ the\ scores\ as\ a\ string.\r\n
comment8.params=team2
comment8.target=boolean\ equals(java.lang.Object)
comment8.text=\r\n\ This\ method\ checks\ if\ the\ scores\ are\ equal.\r\n\ @return\ return\ true\ if\ the\ scores\ are\ equal,\ false\ if\ not.\r\n
numComments=9
